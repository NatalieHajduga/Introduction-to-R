2 + 5
2 +
# This script prints Hello World
wave = "Hello World"
Print(wave)
install.packages("tidyverse")
# This script prints Hello World
wave = "Hello World"
print(wave)
install.packages("tidyverse")
library(tidyverse)
dplyr?
arrange()?
sum()?
?sum
?sum
?sum
3 + 5
7 - 4
2 * 6
10 / 2
2 ^ 3
?sum
3 * (4 + 2) / 2
# Assigning the value 10 to a variable named 'x'
x <- 10
# Good variable names
my_variable <- 42
userAge <- 25
# Bad variable names
This_Is_My_Variable_Name <- 42
my_var1 <- 25
my_var2 <- 25
my_var2
# Numeric variable
height <- 175.5
# Integer variable
height <- 180
# Character variable
name <- "John Doe"
name
# Logical variable
is_student <- TRUE
is_student
# Logical variable
is_student <- TRUE
is_student
# Integer variable
height <- 180
height
# Numeric variable
height <- 175.5
height
# Numeric data type
number <- 42
class(number)  # Result: "numeric"
# Numeric data type
number <- 42
class(number)
my_list <- list(1, 2, 3)
as.character(my_list)
my_list
as.character(my_list)
my_list <- list(1, 2, 3)
class(my_list)
as.character(my_list)
class(my_list)
# Numeric data type
number <- 42
class(number)
age <- 48
class(age)
as.character(age)
class(age)
age <- 48
class(age)
age <- as.character(age)
class(age)
age <- 48
class(age)
age <- as.character(age)
class(age)
# Create a simple DataFrame
my_dataframe <- data.frame(
Name = c("Alice", "Bob", "Charlie"),
Age = c(25, 30, 22),
Grade = c("A", "B", "A-")
)
my_dataframe
# # Printing the DataFrame
print(my_dataframe)
# Accessing the starwars dataset
data(starwars)
library(dplyr)
library(dplyr)
# Accessing the starwars dataset
data(starwars)
# Access the age column in the dataframe names 'my_dataframe', and save it to the variable 'ages'
ages <- my_dataframe$Age
print(ages)
# View the first few rows of the dataset
head(starwars)
# Summary statistics
summary(starwars)
str(starwars)
# Using your dataframe, add the following scores to the the column 'Score'
my_dataframe$Score <- c(95, 89, 75)
my_dataframe
print(my_dataframe)
my_dataframe <- my_dataframe %>%
mutate(Score = c(95, 89, 75))
my_dataframe <- my_dataframe %>%
mutate(Score = c(95, 89, 75))
print(my_dataframe)
# Using subset
my_dataframe <- subset(my_dataframe, select = c(Name, Age))
# Using indexing
my_dataframe <- my_dataframe[, c("Name", "Age")]
# Using subset
my_dataframe <- subset(my_dataframe, select = c(Name, Age))
print(my_dataframe)
# Using indexing
my_dataframe <- my_dataframe[, c("Name", "Age")]
print(my_dataframe)
my_dataframe$Score <- NULL
print(my_dataframe)
# Create a simple DataFrame
my_dataframe <- data.frame(
Name = c("Alice", "Bob", "Charlie"),
Age = c(25, 30, 22),
Grade = c("A", "B", "A-"))
#remove the score column
my_dataframe$Score <- NULL
print(my_dataframe)
# Create a simple DataFrame
my_dataframe <- data.frame(
Name = c("Alice", "Bob", "Charlie"),
Age = c(25, 30, 22),
Grade = c("A", "B", "A-"))
#remove the score column
my_dataframe$Grade <- NULL
print(my_dataframe)
# Create a simple DataFrame
my_dataframe <- data.frame(
Name = c("Alice", "Bob", "Charlie"),
Age = c(25, 30, 22),
Grade = c("A", "B", "A-"))
# Using subset
my_dataframe <- subset(my_dataframe, select = c(Name, Age))
print(my_dataframe)
# Using indexing
my_dataframe <- my_dataframe[, c("Name", "Age")]
print(my_dataframe)
# Create a simple DataFrame
my_dataframe <- data.frame(
Name = c("Alice", "Bob", "Charlie"),
Age = c(25, 30, 22),
Grade = c("A", "B", "A-"))
my_dataframe <- my_dataframe %>%
select(Name, Age)
# Create a simple DataFrame
my_dataframe <- data.frame(
Name = c("Alice", "Bob", "Charlie"),
Age = c(25, 30, 22),
Grade = c("A", "B", "A-"))
my_dataframe <- my_dataframe %>%
select(Name, Age)
# Create a simple DataFrame
my_dataframe <- data.frame(
Name = c("Alice", "Bob", "Charlie"),
Age = c(25, 30, 22),
Grade = c("A", "B", "A-"))
my_dataframe <- my_dataframe %>%
select(Name, Age)
print(my_dataframe)
my_dataframe <- my_dataframe
mutate(Score = c(95, 89, 75))
my_dataframe <- my_dataframe,
my_dataframe <- my_dataframe
mutate(Score = c(95, 89, 75))
library(dplyr)
my_dataframe <- my_dataframe >%>
my_dataframe <- my_dataframe %>%
mutate(Score = c(95, 89, 75))
print(my_dataframe)
# load the library dplyr
library(dplyr)
# Create a simple DataFrame
my_dataframe <- data.frame(
Name = c("Alice", "Bob", "Charlie"),
Age = c(25, 30, 22),
Grade = c("A", "B", "A-")
)
# # Printing the DataFrame
print(my_dataframe)
# View the first few rows of the dataset
head(starwars)
# Provides a compact way to see the internal structure of an R object
str(starwars)
# Exporting data to a CSV file
write.csv(my_dataframe, "path/to/save/your/file.csv", row.names = FALSE)
# Exporting data to a CSV file
#write.csv(my_dataframe, "path/to/save/your/file.csv", row.names = FALSE)
# Create a list
my_games_list = list("The Witcher 3: Wild Hunt",
"Minecraft",
"Fortnite",
"Among Us",
"World of Warcraft",
"Counter-Strike: Global Offensive"
)
# Display the list
print(my_games_list)
# Create a list
games_list <- list(
"Super Mario Bros" = 1985,
"The Legend of Zelda" = 1986,
"Doom" = 1993,
"Minecraft" = 2011,
"Fortnite" = 2017
)
# Display the list
print(games_list)
# Create a list
games_list <- list(
"Super Mario Bros" = 1985,
"The Legend of Zelda" = 1986,
"Doom" = 1993,
"Minecraft" = 2011,
"Fortnite" = 2017
)
# Display the list
print(games_list)
# Create a list
my_simple_list <- list(
Name = "Alice",
Age = 25,
Score = 95,
Married = TRUE
)
# Display the list
print(my_simple_list)
# Access the 'age' element in the list
age <- my_simple_list$age
# Access the 'age' element in the list
age <- my_simple_list$age
# Display the list
print(age)
# Access the 'age' element in the list
name <- my_simple_list$name
# Display the list
print(name)
# Access the 'age' element in the list
name <- my_simple_list$Name
# Display the list
print(name)
# Adding a new element to the list
my_simple_list$new_element <- "New Data"
# Adding a new element to the list
my_simple_list$new_element <- "New Data"
# Display the list
print(my_simple_list)
# Example: Creating a scatter plot
x <- c(1, 2, 3, 4, 5)
y <- c(2, 4, 1, 5, 3)
plot(x, y, main = "Scatter Plot", xlab = "X-axis", ylab = "Y-axis")
#sample: Creating a scatter plot
x <- c(1, 2, 3, 4, 5)
y <- c(2, 4, 1, 5, 3)
plot(x, y, main = "Scatter Plot", xlab = "X-axis", ylab = "Y-axis")
plot(x, y, ...)
# Adding titles and labels
plot(x, y, main = "Customized Scatter Plot", xlab = "X-axis", ylab = "Y-axis")
# Customizing colors and symbols
plot(x, y, main = "Customized Scatter Plot", xlab = "X-axis", ylab = "Y-axis", col = "blue", pch = 16)
#sample: Creating a scatter plot
x <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
y <- c(2, 4, 1, 5, 3, 2, 5, 3, 3, 2)
plot(x, y, main = "Scatter Plot", xlab = "X-axis", ylab = "Y-axis")
# Adding titles and labels
plot(x, y, main = "Customized Scatter Plot", xlab = "X-axis", ylab = "Y-axis")
# Customizing colors and symbols
plot(x, y, main = "Customized Scatter Plot", xlab = "X-axis", ylab = "Y-axis", col = "blue", pch = 16)
colors()
# Example: Creating a histogram
data <- rnorm(100)
hist(data, main = "Histogram", xlab = "Values", col = "green", border = "black")
# Creating a bar plot
categories <- c("A", "B", "C", "D")
values <- c(10, 5, 8, 12)
barplot(values, names.arg = categories, main = "Bar Plot", xlab = "Categories", ylab = "Values", col = "purple")
# Example: Creating a box plot
boxplot(data, main = "Box Plot", ylab = "Values", col = "orange", border = "black")
# Saving a plot as a PNG file
png("my_plot.png", width = 800, height = 600)
plot(x, y, main = "Scatter Plot")
dev.off()Â  # Close the PNG device
# Saving a plot as a PNG file
png("my_plot.png", width = 800, height = 600)
plot(x, y, main = "Scatter Plot")
dev.off() # Close the PNG device
# View the first few rows of the dataset
head(starwars)
# Chunk 1
2 + 5
# Chunk 2
# This script prints Hello World
wave = "Hello World"
print(wave)
# View the first few rows of the dataset
head(starwars)
mean(starwars$homeworld)
View(starwars)
mean(starwars$height)
mean(height)
tallest_person <- starwars %>%
filter(height == max(height, na.rm = TRUE))
# Print the result
print(tallest_person[, c("name", "height", "homeworld")])
height = subset(starwars, select = c(name, height))
View(height)
largest_height <- max(my_dataframe$height)
View(tallest_person)
largest_height <- max(my_dataframe$height, na.rm = TRUE)
largest_height <- max(my_dataframe$height, na.rm = TRUE)
print(largest_height)
largest_height
largest_height <- max(starwars$height)
largest_height <- max(starwars$height, na.rm = TRUE)
largest_height
# Assuming 'my_dataframe' is your data frame
# Find the row with the largest value in the 'height' column
row_with_largest_height <- which.max(my_dataframe$height)
# Extract the 'name' corresponding to the row with the largest height
name_of_largest_height <- my_dataframe$name[row_with_largest_height]
# Find the largest value in the 'height' column
largest_height <- max(my_dataframe$height, na.rm = TRUE)
# Print the result
print(paste("The largest height is:", largest_height))
print(paste("Corresponding name:", name_of_largest_height))
# Assuming 'my_dataframe' is your data frame
# Find the row with the largest value in the 'height' column
row_with_largest_height <- which.max(starwars$height)
# Extract the 'name' corresponding to the row with the largest height
name_of_largest_height <- starwars$name[row_with_largest_height]
# Find the largest value in the 'height' column
largest_height <- max(starwars$height, na.rm = TRUE)
# Print the result
print(paste("The largest height is:", largest_height))
print(paste("Corresponding name:", name_of_largest_height))
eye_color_counts <- table(starwars$eye_color)
ye_colour_counts <- table(starwars$eye_colour)
eye_colour_counts <- table(starwars$eye_colour)
barplot(eye_color_counts,
main = "Eye Colors of Star Wars Characters",
xlab = "Eye Color",
ylab = "Frequency",
col = "skyblue",
las = 2,  # Rotate x-axis labels
cex.names = 0.8  # Adjust size of x-axis labels
)
